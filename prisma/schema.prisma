generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model admin {
    id       Int    @id @default(autoincrement())
    name     String @db.VarChar(255)
    email    String @unique(map: "email") @db.VarChar(255)
    password String @db.VarChar(999)
    cargo    String @db.VarChar(50)

    sessionAdmin sessionAdmin[]
}

model user {
    id        Int       @id @default(autoincrement())
    name      String    @db.VarChar(255)
    email     String    @unique(map: "email") @db.VarChar(255)
    password  String    @db.VarChar(999)
    cpf       String    @unique(map: "cpf") @db.Char(11)
    birthdate DateTime  @db.Date
    telNumber String    @db.VarChar(20)
    reserve   reserve[]
    token token[]
}

model movie {
    id             Int       @id @default(autoincrement())
    title          String    @unique @db.VarChar(255)
    duration       Int       @db.Int
    trailer        String    @db.VarChar(255)
    synopsis       String    @db.VarChar(999)
    director       String    @db.VarChar(255)
    releaseDate    DateTime  @db.Date
    classification String    @db.Char(2)
    cast           String    @db.VarChar(999)
    gender         String    @db.VarChar(150)
    poster         String    @db.VarChar(999)
    banner         String    @db.VarChar(999)
    session        session[]
}

model cinema {
    id      Int    @id @default(autoincrement())
    name    String @unique @db.VarChar(100)
    city    String @db.VarChar(255)
    address String @db.VarChar(255)
    uf      String @db.Char(2)
    room    room[]
}

model room {
    id       Int       @id @default(autoincrement())
    name     String    @db.Char(2)
    numSeats Int       @db.Int
    numPCD   Int       @db.Int
    cinema   cinema    @relation(fields: [idCinema], references: [id])
    idCinema Int
    session  session[]
}

model session {
    id        Int       @id @default(autoincrement())
    startDate DateTime  @db.Timestamp()
    endHour   DateTime  @db.Time()
    price     Decimal   @db.Decimal(5, 2)
    format    String    @db.Char(2)
    language  String    @db.VarChar(50)
    room      room      @relation(fields: [idRoom], references: [id])
    idRoom    Int
    movie     movie     @relation(fields: [idMovie], references: [id])
    idMovie   Int
    reserve   reserve[]
}

model reserve {
    id        Int      @id @default(autoincrement())
    buyDate   DateTime @db.Timestamp() @default(now())
    method    String   @db.VarChar(50)
    isPCD     Boolean  @db.Bit(1)
    seat      String   @db.VarChar(3)
    isHalf    Boolean  @db.Bit(1)
    halfDoc   String?  @db.VarChar(50)
    user      user     @relation(fields: [idUser], references: [id])
    idUser    Int
    session   session  @relation(fields: [idSession], references: [id])
    idSession Int
    isUsed    Boolean  @default(false) @db.Bit(1)
}

model sessionAdmin{
    id              Int         @id @default(autoincrement())
    startDate       DateTime?   @db.Timestamp(0) 
    updateDate      DateTime?   @db.Timestamp(0) 
    userAgent       String      @db.VarChar(255)
    token           String      @unique @db.VarChar(560)
    admin           admin       @relation(fields: [idAdmin], references: [id])
    idAdmin         Int
}
model token {
    id        Int      @id @default(autoincrement())
    token     String   @unique(map: "token") @db.VarChar(700)
    idUser    Int
    user      user     @relation(fields: [idUser], references: [id], onDelete: Cascade)  
}